"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerIORequestError = exports.isEmpty = void 0;
const isEmpty = (value) => {
    return value === null || value === undefined || (typeof value === 'string' && value.trim() === '');
};
exports.isEmpty = isEmpty;
class CustomerIORequestError extends Error {
    constructor(json, statusCode, response, body) {
        super(CustomerIORequestError.composeMessage(json));
        this.name = 'CustomerIORequestError';
        this.statusCode = statusCode;
        this.response = response;
        this.body = body;
    }
    static composeMessage(json) {
        if (!json) {
            return 'Unknown error';
        }
        if (json.meta && json.meta.error) {
            return json.meta.error;
        }
        else if (json.meta && json.meta.errors) {
            const count = json.meta.errors.length;
            return `${count} ${count === 1 ? 'error' : 'errors'}:
${json.meta.errors.map((error) => `  - ${error}`).join('\n')}`;
        }
        return 'Unknown error';
    }
}
exports.CustomerIORequestError = CustomerIORequestError;
